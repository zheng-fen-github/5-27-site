{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Code from './code';\nimport Pagination from './Pagination';\nimport { connect } from 'react-redux';\nimport Anima from '../public/anima';\n\nconst Content = ({\n  type,\n  action,\n  data,\n  loading\n}) => {\n  const {\n    0: code,\n    1: setCode\n  } = useState(null);\n\n  const getphoto = async () => {\n    try {\n      action({\n        type: 'LADING_CONTENN',\n        loading: true\n      });\n      action({\n        type: 'ALL_CONTENT',\n        data: []\n      });\n      const QURL = process.env.DATA_URL + 'getComponent/get/';\n      let get = await fetch(QURL + type);\n\n      if (get.ok) {\n        let message = await get.json();\n        action({\n          type: 'ALL_CONTENT',\n          data: message\n        });\n        action({\n          type: 'LADING_CONTENN',\n          loading: false\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const arrayResult = useCallback(data.filter(e => !e.filter), [data]);\n  useEffect(() => {\n    getphoto();\n  }, [type]);\n  return __jsx(\"div\", {\n    className: \"jsx-2178904071\" + \" \" + 'row code-content'\n  }, data.length > 0 && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2178904071\" + \" \" + \"col-12 code-count\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-2178904071\"\n  }, \"Showing \", arrayResult.length, \" Results\")), __jsx(Pagination, {\n    type: type,\n    codeList: arrayResult,\n    setCode: setCode\n  })), data.length === 0 && !loading && __jsx(\"h1\", {\n    className: \"jsx-2178904071\"\n  }, \"Showing 0 Results  \"), loading && __jsx(\"div\", {\n    className: \"jsx-2178904071\" + \" \" + \"col-12 my-5 d-flex justify-content-center\"\n  }, __jsx(Anima, {\n    color: \"#fdd303\"\n  })), code && __jsx(Code, {\n    data: code,\n    clear: setCode\n  }), __jsx(_JSXStyle, {\n    id: \"2178904071\"\n  }, [\"h3.jsx-2178904071{margin:2rem 1rem;font-size:2rem;}\", \".code-count.jsx-2178904071{margin-bottom:10rem;}\"]));\n};\n\nconst stateEvent = state => ({\n  data: state.ContentReducer,\n  loading: state.TypeReducer.loading\n});\n\nconst dispatch = dispatch => ({\n  action: dispatch\n});\n\nexport default connect(stateEvent, dispatch)(Content);","map":null,"metadata":{},"sourceType":"module"}