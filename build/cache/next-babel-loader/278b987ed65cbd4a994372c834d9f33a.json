{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\n\nvar Photo = function Photo(_ref) {\n  var id = _ref.id,\n      name = _ref.name;\n\n  var _useState = useState(null),\n      bolb = _useState[0],\n      setBolb = _useState[1];\n\n  var _useState2 = useState(false),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var getphoto = function getphoto() {\n    var QURL, get, blob, img;\n    return _regeneratorRuntime.async(function getphoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            QURL = process.env.DATA_URL + 'addphoto/getphoto/' + id;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(QURL));\n\n          case 4:\n            get = _context.sent;\n\n            if (!get.ok) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(get.blob());\n\n          case 8:\n            blob = _context.sent;\n            img = document.createElement('img');\n            img.src = URL.createObjectURL(blob);\n\n            img.onload = function () {\n              document.querySelector('.photo-container').append(img);\n              canvasFunc(img.offsetWidth, img.offsetHeight, img, setBolb);\n            };\n\n          case 12:\n            _context.next = 18;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            setError(true);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  useEffect(function () {\n    getphoto();\n  }, [id]);\n  return __jsx(React.Fragment, null, bolb && __jsx(\"img\", {\n    src: URL.createObjectURL(bolb),\n    alt: name,\n    className: \"w-100\"\n  }), error && __jsx(\"h2\", null, \"      Wron       \"), __jsx(\"div\", {\n    className: \"photo-container\",\n    style: {\n      position: 'fixed',\n      left: 0,\n      top: 0,\n      visibility: 'hidden',\n      userSelect: 'none'\n    }\n  }), __jsx(\"canvas\", {\n    id: \"canvas\",\n    hidden: true\n  }));\n};\n\nvar canvasFunc = function canvasFunc(W, H, img, loadPhoto) {\n  var canvas = document.getElementById('canvas');\n  var ctx = canvas.getContext('2d');\n  var count = Math.min(W, H);\n  canvas.width = count;\n  canvas.height = count;\n  var w = (Math.max(W, H) - count) / 2;\n  W > H ? ctx.drawImage(img, -w, 0) : ctx.drawImage(img, 0, -w); //裁减成一比一    \n\n  canvas.toBlob(function (blob) {\n    // 输出图片                     \n    loadPhoto(blob);\n  }, 'image/png');\n};\n\nexport default Photo;","map":null,"metadata":{},"sourceType":"module"}